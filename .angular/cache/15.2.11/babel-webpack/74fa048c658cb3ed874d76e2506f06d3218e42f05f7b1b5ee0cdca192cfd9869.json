{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"@angular/common\";\nfunction ClaimHistoryComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"tr\")(1, \"td\");\n    i0.…µ…µtext(2);\n    i0.…µ…µelementEnd();\n    i0.…µ…µelementStart(3, \"td\");\n    i0.…µ…µtext(4);\n    i0.…µ…µelementEnd();\n    i0.…µ…µelementStart(5, \"td\")(6, \"span\", 4);\n    i0.…µ…µtext(7);\n    i0.…µ…µelementEnd()();\n    i0.…µ…µelementStart(8, \"td\");\n    i0.…µ…µtext(9);\n    i0.…µ…µpipe(10, \"date\");\n    i0.…µ…µelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.…µ…µadvance(2);\n    i0.…µ…µtextInterpolate(i_r2 + 1);\n    i0.…µ…µadvance(2);\n    i0.…µ…µtextInterpolate(entry_r1.userId.name);\n    i0.…µ…µadvance(3);\n    i0.…µ…µtextInterpolate(entry_r1.pointsClaimed);\n    i0.…µ…µadvance(2);\n    i0.…µ…µtextInterpolate(i0.…µ…µpipeBind2(10, 4, entry_r1.claimedAt, \"short\"));\n  }\n}\nexport class ClaimHistoryComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.history = [];\n  }\n  ngOnInit() {\n    this.fetchHistory();\n    // Optional: refresh every 10 seconds\n    setInterval(() => this.fetchHistory(), 10000);\n  }\n  fetchHistory() {\n    this.userService.getHistory().subscribe(data => {\n      // Sort latest first\n      this.history = data.sort((a, b) => new Date(b.claimedAt).getTime() - new Date(a.claimedAt).getTime());\n    });\n  }\n  static {\n    this.…µfac = function ClaimHistoryComponent_Factory(t) {\n      return new (t || ClaimHistoryComponent)(i0.…µ…µdirectiveInject(i1.UserService));\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: ClaimHistoryComponent,\n      selectors: [[\"app-claim-history\"]],\n      decls: 15,\n      vars: 1,\n      consts: [[1, \"fw-semibold\", \"mb-3\"], [1, \"table\", \"table-striped\", \"table-sm\", \"table-hover\", \"text-center\"], [1, \"table-light\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"bg-info\", \"text-dark\"]],\n      template: function ClaimHistoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"h5\", 0);\n          i0.…µ…µtext(1, \"\\uD83D\\uDD53 Claim History\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(2, \"table\", 1)(3, \"thead\", 2)(4, \"tr\")(5, \"th\");\n          i0.…µ…µtext(6, \"#\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(7, \"th\");\n          i0.…µ…µtext(8, \"\\uD83D\\uDC64 User\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(9, \"th\");\n          i0.…µ…µtext(10, \"\\uD83C\\uDF81 Points\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(11, \"th\");\n          i0.…µ…µtext(12, \"\\uD83D\\uDD52 Time\");\n          i0.…µ…µelementEnd()()();\n          i0.…µ…µelementStart(13, \"tbody\");\n          i0.…µ…µtemplate(14, ClaimHistoryComponent_tr_14_Template, 11, 7, \"tr\", 3);\n          i0.…µ…µelementEnd()();\n        }\n        if (rf & 2) {\n          i0.…µ…µadvance(14);\n          i0.…µ…µproperty(\"ngForOf\", ctx.history);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.DatePipe],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IAYIA,0BAAiD;IAC3CA,YAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IACoCA,YAAyB;IAAAA,iBAAO;IAExEA,0BAAI;IAAAA,YAAqC;;IAAAA,iBAAK;;;;;IAL1CA,eAAW;IAAXA,8BAAW;IACXA,eAAuB;IAAvBA,0CAAuB;IAEaA,eAAyB;IAAzBA,4CAAyB;IAE7DA,eAAqC;IAArCA,wEAAqC;;;ACV/C,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,YAAO,GAAmB,EAAE;EAEmB;EAE/CC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;IAEnB;IACAC,WAAW,CAAC,MAAM,IAAI,CAACD,YAAY,EAAE,EAAE,KAAK,CAAC;EAC/C;EAEAA,YAAY;IACV,IAAI,CAACF,WAAW,CAACI,UAAU,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC/C;MACA,IAAI,CAACC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAACC,OAAO,EAAE,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAACC,OAAO,EAAE,CAAC;IACvG,CAAC,CAAC;EACJ;;;uBAjBWf,qBAAqB;IAAA;EAAA;;;YAArBA,qBAAqB;MAAAgB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDRlCrB,6BAA6B;UAAAA,0CAAgB;UAAAA,iBAAK;UAElDA,gCAAoE;UAG1DA,iBAAC;UAAAA,iBAAK;UACVA,0BAAI;UAAAA,iCAAO;UAAAA,iBAAK;UAChBA,0BAAI;UAAAA,oCAAS;UAAAA,iBAAK;UAClBA,2BAAI;UAAAA,kCAAO;UAAAA,iBAAK;UAGpBA,8BAAO;UACLA,uEAOK;UACPA,iBAAQ;;;UARgBA,gBAAY;UAAZA,qCAAY","names":["i0","ClaimHistoryComponent","constructor","userService","ngOnInit","fetchHistory","setInterval","getHistory","subscribe","data","history","sort","a","b","Date","claimedAt","getTime","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\leaderboard\\leaderboard-frontend\\src\\app\\components\\claim-history\\claim-history.component.html","C:\\Users\\Admin\\Desktop\\leaderboard\\leaderboard-frontend\\src\\app\\components\\claim-history\\claim-history.component.ts"],"sourcesContent":["<h5 class=\"fw-semibold mb-3\">üïì Claim History</h5>\n\n<table class=\"table table-striped table-sm table-hover text-center\">\n  <thead class=\"table-light\">\n    <tr>\n      <th>#</th>\n      <th>üë§ User</th>\n      <th>üéÅ Points</th>\n      <th>üïí Time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let entry of history; let i = index\">\n      <td>{{ i + 1 }}</td>\n      <td>{{ entry.userId.name }}</td>\n      <td>\n        <span class=\"badge bg-info text-dark\">{{ entry.pointsClaimed }}</span>\n      </td>\n      <td>{{ entry.claimedAt | date: 'short' }}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ClaimHistory } from '../../models/history';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-claim-history',\n  templateUrl: './claim-history.component.html',\n})\nexport class ClaimHistoryComponent implements OnInit {\n  history: ClaimHistory[] = [];\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.fetchHistory();\n\n    // Optional: refresh every 10 seconds\n    setInterval(() => this.fetchHistory(), 10000);\n  }\n\n  fetchHistory(): void {\n    this.userService.getHistory().subscribe((data) => {\n      // Sort latest first\n      this.history = data.sort((a, b) => new Date(b.claimedAt).getTime() - new Date(a.claimedAt).getTime());\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}